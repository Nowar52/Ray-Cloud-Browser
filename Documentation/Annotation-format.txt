Design document for annotations
SÃ©bastien Boisvert
2013-01-27

Purpose: design a reverse-index for sections so that locations for a object found in a map can be enumerated.


The map.dat format is a container for sorted objects.

| x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x |


Annotations are added on top of the map.dat offsets, but in a independant file.


| x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x | x |
  |                                   |                   |
 [*]                                 [*]                 [*]
  |                                                       |
 [*]                                                     [*]
                                                          |
                                                         [*]


magic (32 bits) -> 0x87332cee
version (32 bits) -> 0
annotations.dat

<magic>
<version>
<entries>
<heap>
<annotationOffset>
<annotationOffset>
<annotationOffset>
<annotationOffset>
<annotationOffset>
<annotationOffset>
...
<annotationOffset>
<annotationOffset>
<type><length><content><nextOffset>
<type><length><content><nextOffset>
<type><length><content><nextOffset>
<type><length><content><nextOffset>
...

Sizes:

* uint8_t m_type;
* uint8_t m_size;
* uint8_t*m_content (m_size bytes)
* uint64_t m_nextOffset

The type ANNOTATION_LOCATION has these:

* uint16_t m_section
* uint32_t m_region
* uint32_t m_location

So the size of a ANNOTATION_LOCATION object is:

1+1+(2+4+4)+8 = 20 bytes

The file for m_section can be obtained with the sections found in the 
configuration file. Only the client needs that information.

To look for a object, the map must be used. The annotation file is named
mapFile.dat-Annotations
For any object, annotations are chained. OFFSET_NULL indicates that there are no more annotations.

Other types (not yet implemented, but the design supports them):

* ANNOTATION_TEXT

